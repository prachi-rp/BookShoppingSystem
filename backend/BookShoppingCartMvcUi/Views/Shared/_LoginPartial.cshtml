@using Microsoft.AspNetCore.Identity
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var userName = HttpContextAccessor.HttpContext.Session.GetString("UserName");
    var userImagePath = HttpContextAccessor.HttpContext.Session.GetString("UserImagePath");
    var UserId = HttpContextAccessor.HttpContext.Session.GetInt32("UserId");
}

<ul class="navbar-nav">
    @* <li class="nav-item">
        <a class="nav-link " href="/Cart/GetUserCart">
            <span id="cartCount" class="badge text-bg-info">0</span>
            <i class="bi bi-cart"></i>
        </a>
    </li> *@

@if (userName != null)
{
        @if (userImagePath != null)
        {
    <li class="nav-item">
                <img src="/images/@userImagePath" 
                     alt="Profile Picture"
                     class="rounded-circle"
                     style="width: 30px; height: 30px; object-fit: cover; margin-right: 8px;" />
    </li>
        }
        <li class="nav-item">
            <a class="nav-link" href="/Users/Edit/@UserId" title="Manage">Hello <span id="username">@(string.IsNullOrEmpty(userName) ? "Guest" : userName)!</span></a>
       @*  @if(User.IsInRole("Admin"))
            {
                <span>(Admin)</span>
            } *@
        </li>
    <li class="nav-item">
            <form asp-action="Logout" asp-controller="Users" method="post">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger">Logout</button>
            </form>

    </li>
}
else
{
    
    <li class="nav-item">
            <a class="nav-link " href="/Users/Create">Register</a>
    </li>
    <li class="nav-item">
            <a class="nav-link " href="/Users/Login">Login</a>
    </li>
}
</ul>
